C51 COMPILER V9.01   JISUANQI                                                              04/22/2020 23:18:41 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE JISUANQI
OBJECT MODULE PLACED IN jisuanqi.OBJ
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE jisuanqi.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <math.h>
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          #define KeyPort  P1
   6          
   7          uchar code duanma[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e};// 显示段码值0
             -~F和+-*/ 号
   8          uchar code weima[]={0x3e,0x3d,0x3b,0x37,0x2f,0x1f};//位码,决定显示哪个LED
   9          uchar tempdata[6]={0x3f,0x00,0x00,0x00,0x00,0x00}; //存储相应LED应该显示的值，初始第一位设置为0
  10          
  11          void delayms(void);     //延时
  12          uchar kbscan(void);      //键盘扫描
  13          uchar keypro(void);      //键值计算                             
  14          void display(void);  //数码管显示
  15          
  16          
  17          
  18          //由于要循环输入计算，所以要在一个while循环中
  19          void main (void)        //逻辑部分
  20          {
  21   1         uchar temp,tempbak;
  22   1         uint num1,num2,sym,value;
  23   1         int i,count,num,biaozhi;
  24   1         P1=0xff;
  25   1         count=0;
  26   1         num =0;
  27   1         num1=0;
  28   1         num2=0;
  29   1         temp=0;
  30   1         sym=0;
  31   1         biaozhi=0;
  32   1         tempbak=0;
  33   1      
  34   1        while(1)                      //无限计算
  35   1        {
  36   2              temp=keypro();  //读取键盘值，判断是数字还是运算符
  37   2              if(temp!=tempbak)
  38   2              {
  39   3                  if(temp>=0&&temp<=9&&biaozhi==0)   //输入第一个操作数
  40   3                      {
  41   4                        num1=num1*10+temp;
  42   4                        for(i=count;i>0;i--)
  43   4                        {
  44   5                              tempdata[i] = tempdata[i-1];
  45   5                        }
  46   4                        tempdata[0]=duanma[temp];
  47   4                        count++;
  48   4              
  49   4                      }
  50   3              
  51   3              
  52   3                      else if(temp>=10&&temp<=13&&biaozhi==0)  //输入了操作符，需保存第一个操作数num1和操作符
  53   3                      {
  54   4                        sym=temp;     //保留操作符
C51 COMPILER V9.01   JISUANQI                                                              04/22/2020 23:18:41 PAGE 2   

  55   4              
  56   4                        for(i=count;i>0;i--)
  57   4                        {
  58   5                              tempdata[i] = tempdata[i-1];
  59   5                        }
  60   4                        tempdata[0]=duanma[temp];
  61   4                        count++;
  62   4              
  63   4                        num=count;    //记录第一个数加上操作符的位数
  64   4                        biaozhi++;
  65   4                      }
  66   3              
  67   3              
  68   3                      else if(temp>=0&&temp<=9&&biaozhi==1)   //输入第二个操作数
  69   3                      {
  70   4                        num2=num2*10+temp;    
  71   4                               
  72   4                        for(i=count;i>0;i--)
  73   4                        {
  74   5                              tempdata[i] = tempdata[i-1];
  75   5                        }
  76   4                        tempdata[0]=duanma[temp];
  77   4                        count++;
  78   4              
  79   4                      }       
  80   3                                         
  81   3                      else if(temp==14&&biaozhi==1)           //等号，需要输出结果
  82   3                      {
  83   4              
  84   4                        //加减乘除
  85   4                        if(sym==10)value=num1+num2;
  86   4                        else if(sym==11)value=num1-num2;
  87   4                        else if(sym==12)value=num1*num2;
  88   4                        else if(sym==13)value=num1/num2;
  89   4                        for(i=0;i<6;i++)tempdata[i]=0x00;       //前面显示的先变为0
  90   4              
  91   4                        //把结果存到tempdata[]中
  92   4              
  93   4                        if(value<10)tempdata[0]=duanma[value]; 
  94   4                        else if(value<100){
  95   5                              tempdata[1]=duanma[value/10];
  96   5                              tempdata[0]=duanma[value%10];
  97   5                        }     
  98   4                        
  99   4                        else if(value<1000){
 100   5                              tempdata[2]=duanma[value/100];
 101   5                              tempdata[1]=duanma[(value%100)/10];
 102   5                              tempdata[0]=duanma[value%10];
 103   5                        }     
 104   4                       
 105   4                        else if(value<10000){
 106   5                              tempdata[3]=duanma[value/1000];
 107   5                              tempdata[2]=duanma[(value%1000)/100];
 108   5                              tempdata[1]=duanma[(value%100)/10];
 109   5                              tempdata[0]=duanma[value%10];
 110   5                        }     
 111   4                        
 112   4                        else if(value<100000){
 113   5                              tempdata[4]=duanma[value/10000];
 114   5                              tempdata[3]=duanma[(value%10000)/1000];
 115   5                              tempdata[2]=duanma[(value%1000)/100];
 116   5                              tempdata[1]=duanma[(value%100)/10];
C51 COMPILER V9.01   JISUANQI                                                              04/22/2020 23:18:41 PAGE 3   

 117   5                              tempdata[0]=duanma[value%10];
 118   5                        }     
 119   4              
 120   4                        else if(value<1000000){
 121   5                              tempdata[5]=duanma[value/100000];       
 122   5                          tempdata[4]=duanma[(value%100000)/10000];
 123   5                              tempdata[3]=duanma[(value%10000)/1000];
 124   5                              tempdata[2]=duanma[(value%1000)/100];
 125   5                              tempdata[1]=duanma[(value%100)/10];
 126   5                              tempdata[0]=duanma[value%10];
 127   5                        }
 128   4              
 129   4                        biaozhi=0;
 130   4                        count=0;
 131   4                        num=0;
 132   4                        num1=0;
 133   4                        num2=0;
 134   4                      }
 135   3              
 136   3              
 137   3                      else if(temp==15)                        //清除
 138   3                      {
 139   4                        biaozhi=0;
 140   4                        count=0;
 141   4                        num=0;
 142   4                        num1=0;
 143   4                        num2=0;
 144   4                        for(i=0;i<6;i++)tempdata[i]=0x00;
 145   4                        tempdata[0]=0x3f;
 146   4                      }
 147   3                                                              
 148   3                      
 149   3      //          delayms();
 150   3                      tempbak=temp;
 151   3              } 
 152   2           display();                  //显示
 153   2        }
 154   1      }
 155          
 156          
 157          void display(void)
 158          {
 159   1        uchar i;
 160   1        for(i=0;i<6;i++)  //六个数码管
 161   1              {
 162   2                P2=0x00;
 163   2                P2=tempdata[i]; //数码管显示的值
 164   2                P3=weima[5-i];  //哪一个数码管显示
 165   2                delayms();
 166   2              }
 167   1      }
 168          
 169          /* 
 170                  键盘处理程序：
 171                          1.确定是否有键按下-去抖。
 172                          2.哪一个件按下代表那个数
 173                          3.相应按键执行什么功能
 174          */
 175          
 176          // 扫描键盘返回相应位置编码     
 177          uchar kbscan(void) //键盘扫描函数
 178          { 
C51 COMPILER V9.01   JISUANQI                                                              04/22/2020 23:18:41 PAGE 4   

 179   1              uchar sccode,recode;
 180   1              P1=0xf0; // P1.0~P1.3发全0，P1.4~P1.7输入
 181   1      
 182   1              if ( (P1 & 0xf0)!=0xf0)  // * 如P1口高四位不全为1有键按下* /
 183   1              {
 184   2                      delayms(); // * 延时去抖动* /
 185   2                      if ((P1&0xf0)!=0xf0) // * 在读输入值* /
 186   2                      { 
 187   3                              sccode =0xfe; // * 最低位置0 * /
 188   3                              while((sccode&0x10)!=0)   // 不到最后一行循环
 189   3                              {
 190   4                                      P1 =sccode;    //*P1口输出扫描码
 191   4                                      if ( (P1 & 0xf0)!=0xf0) //  如P1.4~P1.7不全为1，该行有键按下
 192   4                                      {
 193   5                                              recode = P1 & 0xf0; // * 保留P1口高四位值，低四位变为全1, 作为列值* /
 194   5                                              return((sccode&0x0f)|(recode));     //*行码+列值=键编码返回主程序
 195   5                                      }
 196   4                              else
 197   4                                  {
 198   5                                              sccode =(sccode<<1)|0x01; // * 如该行无键按下，查下一行，行扫描值左移一位
 199   5                                      }
 200   4                          } 
 201   3                      }
 202   2              }
 203   1              return( 0 );      // * 无键按下，返回值为0 
 204   1      } 
 205          
 206          
 207          void delayms(void)      //延时函数
 208          {
 209   1        uchar i;                                               
 210   1        for(i=200;i>0;i--){;}
 211   1      }
 212          
 213          
 214          //根据键盘得到数字
 215          unsigned char keypro(void)       //键值转化函数
 216          {
 217   1              switch(kbscan())
 218   1              {
 219   2                case 0xee:return 7;break;
 220   2                case 0xde:return 8;break;
 221   2                case 0xbe:return 9;break;
 222   2                case 0x7e:return 13;break;// 除法
 223   2                case 0xed:return 4;break;
 224   2                case 0xdd:return 5;break;
 225   2                case 0xbd:return 6;break;
 226   2                case 0x7d:return 12;break;//乘法
 227   2                case 0xeb:return 1;break;
 228   2                case 0xdb:return 2;break;
 229   2                case 0xbb:return 3;break;
 230   2                case 0x7b:return 11;break;//减法
 231   2                case 0xe7:return 15;break;//清除
 232   2                case 0xd7:return 0;break;
 233   2                case 0xb7:return 14;break;//等于
 234   2                case 0x77:return 10;break;//加法
 235   2                default:return 0xff;break;
 236   2         }
 237   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.01   JISUANQI                                                              04/22/2020 23:18:41 PAGE 5   

   CODE SIZE        =   1545    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
